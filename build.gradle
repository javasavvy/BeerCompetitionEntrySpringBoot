buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
    }
}

apply plugin: 'java'
//if you want gradle to build eclipse project files.  then execute "gradle eclipse"
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'

//jar {
//    baseName = 'gs-spring-boot'
//    version =  '0.1.0'
//}

war {
    baseName = 'BeerCompetitionEntrySpringBootGradle'
    version =  '0.0.1'
}


// Example
//war {
//    from 'src/main/java' // adds a file-set to the root of the archive
//    webInf { from 'src/main/WEB-INF' } // adds a file-set to the WEB-INF dir.
//    classpath fileTree('additionalLibs') // adds a file-set to the WEB-INF/lib dir.
//    classpath configurations.moreLibs // adds a configuration to the WEB-INF/lib dir.
//    webXml = file('src/someWeb.xml') // copies a file to WEB-INF/web.xml
//}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// providedRuntime vs providedCompile vs runtime?
dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    // providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    providedCompile("javax.servlet:javax.servlet-api:3.0.1")
    runtime("javax.servlet:jstl:1.1.2")

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}

//task compile << {
//    println 'compiling source'
//}
//
//task compileTest(dependsOn: compile) << {
//    println 'compiling unit tests'
//}
//
//task dist(dependsOn: [compile, test]) << {
//    println 'building the distribution'
//}
//
//task start << {
//    java
//}